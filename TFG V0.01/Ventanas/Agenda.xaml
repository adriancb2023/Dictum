<?xml version="1.0" encoding="utf-8"?>
<Window x:Class="TFG_V0._01.Ventanas.Agenda" 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:local="clr-namespace:TFG_V0._01.Ventanas" 
        xmlns:controls="clr-namespace:TFG_V0._01.Controladores"
        xmlns:helpers="clr-namespace:TFG_V0._01.Helpers"
        xmlns:conv="clr-namespace:TFG_V0._01.Converters"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d" 
        Title="Agenda" Height="850" Width="1200" 
        WindowStartupLocation="CenterScreen">

    <Window.Resources>
        <SolidColorBrush x:Key="TextPrimaryDark" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="TextSecondaryDark" Color="#CCFFFFFF"/>
        <SolidColorBrush x:Key="TextPrimaryLight" Color="#222222"/>
        <SolidColorBrush x:Key="TextSecondaryLight" Color="#666666"/>
        <!-- Estilo para el botón de cambio de tema -->
        <Style x:Key="ThemeButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="20">
                            <Image x:Name="ThemeIcon" Width="20" Height="20">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Setter Property="Source" Value="/TFG V0.01;component/Recursos/Iconos/luna.png"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="True">
                                                <Setter Property="Source" Value="/TFG V0.01;component/Recursos/Iconos/sol.png"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.8"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Botones redondeados -->
        <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#FFFFFF"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                        CornerRadius="20" BorderThickness="{TemplateBinding BorderThickness}" 
                        BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      RecognizesAccessKey="True"
                                      TextElement.Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="aqua" TargetName="border"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="#DDDDDD" TargetName="border"/>
                            </Trigger>
                            <!-- Trigger para cambiar el fondo en modo claro -->
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                                <Setter Property="Background" Value="#30000000" TargetName="border"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Estilo de botón redondeado que cambia con el tema -->
        <Style x:Key="ThemeAwareRoundedButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource RoundedButtonStyle}">
            <Setter Property="Foreground" Value="#333333"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                    <Setter Property="Background" Value="#30000000"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="True">
                    <Setter Property="Background" Value="#30FFFFFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Estilo de botón redondeado sin borde -->
        <Style x:Key="NoBorderRoundedButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ThemeAwareRoundedButtonStyle}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                                CornerRadius="20" BorderThickness="{TemplateBinding BorderThickness}" 
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Anular triggers de hover/press del estilo base -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Transparent" TargetName="border"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="Transparent" TargetName="border"/>
                            </Trigger>
                            <!-- Mantener trigger de tema si es necesario, o manejarlo en ThemeAwareRoundedButtonStyle -->
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                                <Setter Property="Background" Value="Transparent" TargetName="border"/>
                                <Setter Property="Foreground" Value="{StaticResource TextPrimaryLight}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="True">
                                <Setter Property="Background" Value="Transparent" TargetName="border"/>
                                <Setter Property="Foreground" Value="{StaticResource TextPrimaryDark}"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Easing para suavizar la animación -->
        <QuadraticEase x:Key="SmoothEase" EasingMode="EaseInOut" />
        <!-- Estilo de tarjeta -->
        <Style x:Key="CardStyle" TargetType="Border">
            <Setter Property="CornerRadius" Value="20"/>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#282828" Opacity="0.8"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="15"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" BlurRadius="15" ShadowDepth="2" Opacity="0.3"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                    <Setter Property="Background" Value="#F0F0F0"/>
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="#AAAAAA" BlurRadius="15" ShadowDepth="2" Opacity="0.3"/>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Colores y estilos para el botón de cerrar -->
        <SolidColorBrush x:Key="CloseButtonForegroundDark" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="CloseButtonForegroundLight" Color="#FF222222"/>
        <SolidColorBrush x:Key="CloseButtonHover" Color="#FFFF5252"/>

        <!--Colores para los botones-->
        <SolidColorBrush x:Key="ButtonBackgroundDark" Color="#FFF"/>
        <SolidColorBrush x:Key="ButtonBackgroundLight" Color="#FFF"/>
        <SolidColorBrush x:Key="ButtonForegroundDark" Color="#222"/>
        <SolidColorBrush x:Key="ButtonForegroundLight" Color="#222"/>
        <SolidColorBrush x:Key="ButtonHoverDark" Color="#FF333333"/>
        <SolidColorBrush x:Key="ButtonHoverLight" Color="#FFEEEEEE"/>
        <SolidColorBrush x:Key="ButtonShadow" Color="#22000000"/>

        <!-- Mesh Gradients accesibles globalmente -->
        <RadialGradientBrush x:Key="Mesh1" Center="0.3,0.3" RadiusX="0.5" RadiusY="0.5">
            <GradientStop Color="#de9cb8" Offset="0"/>
            <GradientStop Color="#9dcde1" Offset="1"/>
        </RadialGradientBrush>
        <RadialGradientBrush x:Key="Mesh2" Center="0.7,0.7" RadiusX="0.6" RadiusY="0.6">
            <GradientStop Color="#dc8eb8" Offset="0"/>
            <GradientStop Color="#98d3ec" Offset="1"/>
        </RadialGradientBrush>

        <!-- Gradientes para el panel deslizante -->
        <LinearGradientBrush x:Key="SlidePanelGradientDark" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#070055" Offset="0"/>
            <GradientStop Color="#250055" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="SlidePanelGradientLight" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#ee6ef5" Offset="0"/>
            <GradientStop Color="#57b9ff" Offset="1"/>
        </LinearGradientBrush>

        <!-- Estilo para el panel deslizante -->
        <Style x:Key="SlidePanelStyle" TargetType="Grid">
            <Setter Property="Background" Value="{StaticResource SlidePanelGradientDark}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                    <Setter Property="Background" Value="{StaticResource SlidePanelGradientLight}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Estilo para texts primarios -->
        <Style x:Key="PrimaryTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryDark}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource TextPrimaryLight}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Estilo para textos secundarios -->
        <Style x:Key="SecondaryTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource TextSecondaryDark}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource TextSecondaryLight}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Estilo para los contenedores de lista de tareas/eventos/casos -->
        <Style x:Key="ListItemContainerStyle" TargetType="Border">
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#3A3A3A" Opacity="0.7"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=(ItemsControl.AlternationIndex)}" Value="1">
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                    <Setter Property="Background" Value="#E8E8E8"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <helpers:BoolToBrushConverter x:Key="BoolToBrushConverter"
            SelectedBrush="#FF2196F3"
            UnselectedBrush="Transparent"/>
        <conv:StringToBrushConverter x:Key="StringToBrushConverter" />

        <!-- Estilo para TextBox redondeado -->
        <Style x:Key="RoundedTextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="#FFFFFF"/>
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="10"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ScrollViewer x:Name="PART_ContentHost" Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="True">
                    <Setter Property="Background" Value="#483D8B"/>
                    <Setter Property="Foreground" Value="#FFFFFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Estilo para DatePicker redondeado -->
        <Style x:Key="RoundedDatePickerStyle" TargetType="DatePicker">
            <Setter Property="Background" Value="#FFFFFF"/>
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DatePicker">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="10"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox x:Name="PART_TextBox"
                                         Text="{Binding SelectedDate, RelativeSource={RelativeSource TemplatedParent}, StringFormat=d}"
                                         Background="Transparent"
                                         BorderThickness="0"
                                         Padding="10"/>
                                <Button x:Name="PART_Button"
                                        Grid.Column="1"
                                        Content="▼"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        Padding="10,0"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="True">
                    <Setter Property="Background" Value="#333333"/>
                    <Setter Property="Foreground" Value="#FFFFFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Estilo para ComboBox redondeado -->
        <Style x:Key="RoundedComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Background" Value="#FFFFFF"/>
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="10"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.Column="0"
                                                Content="{TemplateBinding SelectionBoxItem}"
                                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                VerticalAlignment="Center"
                                                Margin="10,0,0,0"/>
                                <ToggleButton x:Name="ToggleButton"
                                             Grid.Column="1"
                                             IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                             ClickMode="Press"
                                             Background="Transparent"
                                             BorderThickness="0"
                                             Padding="10,0">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border Background="Transparent">
                                                <TextBlock Text="▼" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="True">
                    <Setter Property="Background" Value="#333333"/>
                    <Setter Property="Foreground" Value="#FFFFFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Estilo para ListBox redondeado -->
        <Style x:Key="RoundedListBoxStyle" TargetType="ListBox">
            <Setter Property="Background" Value="#FFFFFF"/>
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="10"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ScrollViewer Padding="10">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="True">
                    <Setter Property="Background" Value="#333333"/>
                    <Setter Property="Foreground" Value="#FFFFFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Estilo para los elementos dentro del panel deslizante -->
        <Style x:Key="SlidePanelContentStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryDark}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource TextPrimaryLight}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Estilo para los TextBox dentro del panel deslizante -->
        <Style x:Key="SlidePanelTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource RoundedTextBoxStyle}">
            <Setter Property="Background" Value="#333333"/>
            <Setter Property="Foreground" Value="#FFFFFF"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                    <Setter Property="Background" Value="#FFFFFF"/>
                    <Setter Property="Foreground" Value="#333333"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Estilo para los ComboBox dentro del panel deslizante -->
        <Style x:Key="SlidePanelComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource RoundedComboBoxStyle}">
            <Setter Property="Background" Value="#333333"/>
            <Setter Property="Foreground" Value="#FFFFFF"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                    <Setter Property="Background" Value="#FFFFFF"/>
                    <Setter Property="Foreground" Value="#333333"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- ModernComboBoxStyle - Basado en BusquedaJurisprudencia.xaml -->
        <Style x:Key="ModernComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="#30FFFFFF"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryDark}"/>
            <Setter Property="BorderBrush" Value="#40FFFFFF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10,8"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Padding" Value="10,5"/>
                        <Setter Property="Foreground" Value="#FFFFFF"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource TextPrimaryLight}"/>
                                <Setter Property="Background" Value="Transparent"/>
                            </DataTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#30000000"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#50000000"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False"/>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="#30FFFFFF"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False"/>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="#50FFFFFF"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border x:Name="ComboBoxBorder"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="10"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter Grid.Column="0"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"/>
                                    <ToggleButton Grid.Column="0" Grid.ColumnSpan="2"
                                                x:Name="ToggleButton"
                                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                ClickMode="Press">
                                        <ToggleButton.Template>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Border Background="Transparent"
                                                        BorderThickness="0">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Path Grid.Column="1" Data="M0,0 L4,4 L8,0"
                                                            Stroke="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=Foreground}"
                                                            StrokeThickness="2"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center"/>
                                                    </Grid>
                                                </Border>
                                            </ControlTemplate>
                                        </ToggleButton.Template>
                                    </ToggleButton>
                                </Grid>
                            </Border>
                            <Popup x:Name="PART_Popup"
                                   AllowsTransparency="True"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   PlacementTarget="{Binding ElementName=ComboBoxBorder}" 
                                   Placement="Bottom">
                                <Border CornerRadius="10"
                                        BorderThickness="1" MaxHeight="200"
                                        MinWidth="{Binding Path=ActualWidth, ElementName=ComboBoxBorder}">
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter Property="Background" Value="#3A3A3A"/>
                                            <Setter Property="BorderBrush" Value="#555"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                                                    <Setter Property="Background" Value="#FFFFFF"/>
                                                    <Setter Property="BorderBrush" Value="#CCC"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <ScrollViewer SnapsToDevicePixels="True">
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                    <Setter Property="Background" Value="#FFFFFF"/>
                    <Setter Property="Foreground" Value="{StaticResource TextPrimaryLight}"/>
                    <Setter Property="BorderBrush" Value="#CCCCCC"/>
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="#CCCCCC" BlurRadius="5" ShadowDepth="2" Opacity="0.5"/>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="True">
                    <Setter Property="Background" Value="#30FFFFFF"/>
                    <Setter Property="Foreground" Value="{StaticResource TextPrimaryDark}"/>
                    <Setter Property="BorderBrush" Value="#40FFFFFF"/>
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="Black" BlurRadius="5" ShadowDepth="2" Opacity="0.3"/>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- ModernTextBoxStyle - Basado en BusquedaJurisprudencia.xaml -->
        <Style x:Key="ModernTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="#30FFFFFF"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryDark}"/>
            <Setter Property="BorderBrush" Value="#40FFFFFF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10,8"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="10"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="AUTO" />
            <ColumnDefinition Width="2" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!-- Fondo -->
        <Grid.Background>
            <DrawingBrush x:Name="meshGradientBrush" Stretch="Fill"/>
        </Grid.Background>

        <!-- Navbar -->
        <controls:NavbarControl x:Name="navbar" Grid.Column="0" Tag="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}">
            <controls:NavbarControl.Effect>
                <DropShadowEffect BlurRadius="20" ShadowDepth="0" Color="Black" Opacity="0.3"/>
            </controls:NavbarControl.Effect>
        </controls:NavbarControl>

        <!-- Claro/Oscuro -->
        <Button x:Name="ThemeButton" Width="35" Height="35" Margin="0" HorizontalAlignment="Right" VerticalAlignment="Bottom" Click="ThemeButton_Click" Style="{StaticResource ThemeButtonStyle}" Grid.Column="2"/>

        <!-- Contenido principal -->
        <Grid Grid.Column="2" Margin="20">
            <Grid.Effect>
                <DropShadowEffect BlurRadius="20" ShadowDepth="0" Color="Black" Opacity="0.3"/>
            </Grid.Effect>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Header -->
            <TextBlock x:Name="txtHeaderAgenda" Text="Agenda" Style="{StaticResource PrimaryTextStyle}" FontSize="24" FontWeight="Bold" Margin="0,0,0,20"/>

            <!-- Contenido de la agenda -->
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>

                <!-- Calendario y Eventos del día seleccionado -->
                <Border Style="{StaticResource CardStyle}" Grid.Column="0" Margin="0,0,10,0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <!-- Calendario -->
                        <Calendar x:Name="MainCalendar" Grid.Row="0" Margin="0,0,0,15" FirstDayOfWeek="Monday" MouseDoubleClick="MainCalendar_MouseDoubleClick" SelectedDatesChanged="MainCalendar_SelectedDatesChanged"/>

                        <!-- Lista de eventos del día seleccionado -->
                        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                            <StackPanel>
                                <TextBlock x:Name="txtTituloEventosDia" Text="Eventos del día seleccionado" Style="{StaticResource PrimaryTextStyle}" FontSize="18" FontWeight="Bold" Margin="0,0,0,15"/>
                                <ListView x:Name="EventosDelDiaList" ItemsSource="{Binding EventosDelDia, RelativeSource={RelativeSource AncestorType=Window}}" Background="Transparent" BorderThickness="0" HorizontalAlignment="Stretch">
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem">
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                    <ListView.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel HorizontalAlignment="Stretch"/>
                                        </ItemsPanelTemplate>
                                    </ListView.ItemsPanel>
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <Border Style="{StaticResource ListItemContainerStyle}" HorizontalAlignment="Stretch">
                                                <Grid HorizontalAlignment="Stretch">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="Auto"/>
                                                    </Grid.RowDefinitions>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Text="{Binding Titulo}" Style="{StaticResource PrimaryTextStyle}" FontWeight="Bold" Grid.Row="0" Grid.Column="0"/>
                                                    <!-- Hora como pill -->
                                                    <Border Background="#FFF3E0" CornerRadius="8" Padding="8,2" Margin="10,0,0,0" Grid.Row="0" Grid.Column="1" VerticalAlignment="Center">
                                                        <TextBlock Text="{Binding FechaInicio, StringFormat='{}{0:hh\\:mm}'}" Foreground="#FF8A00" FontWeight="Bold" FontSize="15" HorizontalAlignment="Center"/>
                                                    </Border>
                                                    <TextBlock Text="{Binding Descripcion}" Style="{StaticResource SecondaryTextStyle}" Grid.Row="1" Grid.Column="0" TextWrapping="Wrap" Margin="0,5,0,0"/>
                                                    <TextBlock Text="{Binding NombreCaso}" Style="{StaticResource SecondaryTextStyle}" Grid.Row="2" Grid.Column="0" Margin="0,5,0,0"/>
                                                    <Border Background="{Binding EstadoColor, Converter={StaticResource StringToBrushConverter}}"
                                                            CornerRadius="8" Padding="8,2" Margin="10,0,0,0" Grid.Row="2" Grid.Column="1" VerticalAlignment="Center">
                                                        <TextBlock Text="{Binding EstadoNombre}" Foreground="White" FontWeight="SemiBold" FontSize="13"/>
                                                    </Border>
                                                </Grid>
                                            </Border>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </StackPanel>
                        </ScrollViewer>
                    </Grid>
                </Border>

                <!-- Eventos de hoy -->
                <Border Style="{StaticResource CardStyle}" Grid.Column="1" Margin="10,0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock x:Name="txtTituloEventosHoy" Text="Eventos de Hoy" Style="{StaticResource PrimaryTextStyle}" FontSize="18" FontWeight="Bold" Margin="0,0,0,15"/>
                        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                            <StackPanel>
                                <ListView x:Name="EventosDeHoyList" ItemsSource="{Binding EventosDeHoy, RelativeSource={RelativeSource AncestorType=Window}}" Background="Transparent" BorderThickness="0" HorizontalAlignment="Stretch">
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem">
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                    <ListView.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel HorizontalAlignment="Stretch"/>
                                        </ItemsPanelTemplate>
                                    </ListView.ItemsPanel>
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <Border Style="{StaticResource ListItemContainerStyle}" HorizontalAlignment="Stretch">
                                                <Grid HorizontalAlignment="Stretch">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="Auto"/>
                                                    </Grid.RowDefinitions>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Text="{Binding Titulo}" Style="{StaticResource PrimaryTextStyle}" FontWeight="Bold" Grid.Row="0" Grid.Column="0"/>
                                                    <!-- Hora como pill -->
                                                    <Border Background="#FFF3E0" CornerRadius="8" Padding="8,2" Margin="10,0,0,0" Grid.Row="0" Grid.Column="1" VerticalAlignment="Center">
                                                        <TextBlock Text="{Binding FechaInicio, StringFormat='{}{0:hh\\:mm}'}" Foreground="#FF8A00" FontWeight="Bold" FontSize="15" HorizontalAlignment="Center"/>
                                                    </Border>
                                                    <TextBlock Text="{Binding Descripcion}" Style="{StaticResource SecondaryTextStyle}" Grid.Row="1" Grid.Column="0" TextWrapping="Wrap" Margin="0,5,0,0"/>
                                                    <TextBlock Text="{Binding NombreCaso}" Style="{StaticResource SecondaryTextStyle}" Grid.Row="2" Grid.Column="0" Margin="0,5,0,0"/>
                                                    <Border Background="{Binding EstadoColor, Converter={StaticResource StringToBrushConverter}}"
                                                            CornerRadius="8" Padding="8,2" Margin="10,0,0,0" Grid.Row="2" Grid.Column="1" VerticalAlignment="Center">
                                                        <TextBlock Text="{Binding EstadoNombre}" Foreground="White" FontWeight="SemiBold" FontSize="13"/>
                                                    </Border>
                                                </Grid>
                                            </Border>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </StackPanel>
                        </ScrollViewer>
                    </Grid>
                </Border>

                <!-- Lista de contactos -->
                <Border Style="{StaticResource CardStyle}" Grid.Column="2" Margin="10,0,0,0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock x:Name="txtTituloContactos" Text="Contactos" Style="{StaticResource PrimaryTextStyle}" FontSize="18" FontWeight="Bold" Margin="0,0,0,15"/>
                        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                            <StackPanel>
                                <ListView x:Name="ContactosList" 
                                         ItemsSource="{Binding Contactos, RelativeSource={RelativeSource AncestorType=Window}}" 
                                         Background="Transparent" 
                                         BorderThickness="0" 
                                         HorizontalAlignment="Stretch">
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem">
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                    <ListView.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel HorizontalAlignment="Stretch"/>
                                        </ItemsPanelTemplate>
                                    </ListView.ItemsPanel>
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <Border Style="{StaticResource ListItemContainerStyle}" HorizontalAlignment="Stretch">
                                                <Grid HorizontalAlignment="Stretch">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="Auto"/>
                                                    </Grid.RowDefinitions>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Text="{Binding nombre}" 
                                                             Style="{StaticResource PrimaryTextStyle}" 
                                                             FontWeight="Bold" 
                                                             Grid.Row="0" 
                                                             Grid.Column="0"/>
                                                    <TextBlock Text="{Binding tipo}" 
                                                             Style="{StaticResource SecondaryTextStyle}" 
                                                             Grid.Row="0" 
                                                             Grid.Column="1" 
                                                             Margin="10,0,0,0"/>
                                                    <TextBlock Text="{Binding telefono}" 
                                                             Style="{StaticResource SecondaryTextStyle}" 
                                                             Grid.Row="2" 
                                                             Grid.Column="0" 
                                                             Margin="0,5,0,0"/>
                                                    <TextBlock Text="{Binding email}" 
                                                             Style="{StaticResource SecondaryTextStyle}" 
                                                             Grid.Row="3" 
                                                             Grid.Column="0" 
                                                             Margin="0,5,0,0"/>
                                                    <TextBlock Text="{Binding NombreCaso}"
                                                               Style="{StaticResource SecondaryTextStyle}"
                                                               Grid.Row="3"
                                                               Grid.Column="1"
                                                               Margin="10,5,0,0"
                                                               Foreground="{Binding ColorCaso}"/>
                                                </Grid>
                                            </Border>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </StackPanel>
                        </ScrollViewer>
                        <Button x:Name="btnNuevoContacto" Grid.Row="2" Content="Nuevo Contacto" Style="{StaticResource RoundedButtonStyle}" Margin="0,15,0,0" Click="NuevoContactoButton_Click"/>
                    </Grid>
                </Border>
            </Grid>
        </Grid>

        <!-- Overlay para cerrar al hacer clic fuera -->
        <Grid x:Name="OverlayPanel" 
              Grid.Column="2" 
              Background="#80000000" 
              Panel.ZIndex="998" 
              Visibility="Collapsed" 
              MouseDown="OverlayPanel_MouseDown"/>

        <!-- Panel deslizable para nuevo evento -->
        <Grid x:Name="NewEventPanel" 
              Grid.Column="2" 
              HorizontalAlignment="Right" 
              Width="400" 
              Panel.ZIndex="999"
              Visibility="Collapsed"
              Style="{StaticResource SlidePanelStyle}">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="NewEventPanelTransform" X="400"/>
            </Grid.RenderTransform>
            
            <Grid>
                <Grid.Effect>
                    <DropShadowEffect BlurRadius="20" ShadowDepth="0" Color="Black" Opacity="0.5"/>
                </Grid.Effect>
                
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!-- Header del panel -->
                <Grid Grid.Row="0" Height="60">
                    <TextBlock x:Name="txtPanelNuevoEventoTitulo" Text="Nuevo Evento" 
                              Style="{StaticResource SlidePanelContentStyle}" 
                              FontSize="20" 
                              FontWeight="Bold" 
                              VerticalAlignment="Center" 
                              Margin="20,0"/>
                </Grid>

                <!-- Contenido del formulario -->
                <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" Height="696">
                    <StackPanel Margin="20">
                        <TextBlock x:Name="txtLabelEventTitle" Text="Título" 
                                   Style="{StaticResource PrimaryTextStyle}" 
                                   FontWeight="SemiBold" 
                                   FontSize="15" 
                                   Margin="0,0,0,8"/>
                        <TextBox x:Name="EventTitleTextBox" 
                                Style="{StaticResource ModernTextBoxStyle}"
                                Height="30" 
                                FontSize="10" 
                                Margin="0,0,0,20"/>

                        <TextBlock x:Name="txtLabelEventDescription" Text="Descripción" 
                                   Style="{StaticResource PrimaryTextStyle}" 
                                   FontWeight="SemiBold" 
                                   FontSize="10" 
                                   Margin="0,0,0,8"/>
                        <TextBox x:Name="EventDescriptionTextBox" 
                                Style="{StaticResource ModernTextBoxStyle}"
                                Height="60" 
                                FontSize="10" 
                                AcceptsReturn="True" 
                                Margin="0,0,0,20"/>

                        <TextBlock x:Name="txtLabelEventTime" Text="Hora y minutos" 
                                   Style="{StaticResource PrimaryTextStyle}" 
                                   FontWeight="SemiBold" 
                                   FontSize="15" 
                                   Margin="0,0,0,8"/>
                        <materialDesign:TimePicker x:Name="timePickerEvento" 
                                                 Margin="0,0,0,20" 
                                                 Height="32"/>

                        <TextBlock x:Name="txtLabelEventStatus" Text="Estado" 
                                   Style="{StaticResource PrimaryTextStyle}" 
                                   FontWeight="SemiBold" 
                                   FontSize="15" 
                                   Margin="0,0,0,8"/>
                        <ComboBox x:Name="cbEstadoEvento" 
                                 Margin="0,0,0,15"
                                 DisplayMemberPath="Nombre" 
                                 SelectedValuePath="Id" 
                                 Style="{StaticResource ModernComboBoxStyle}"
                                 Height="35"
                                 FontSize="10"/>

                        <TextBlock x:Name="txtLabelEventCase" Text="Caso" 
                                   Style="{StaticResource PrimaryTextStyle}" 
                                   FontWeight="SemiBold" 
                                   FontSize="15" 
                                   Margin="0,0,0,8"/>
                        <ComboBox x:Name="cbCasoEvento"
                                 ItemsSource="{Binding Casos}"
                                 DisplayMemberPath="titulo"
                                 SelectedValuePath="id"
                                 Style="{StaticResource ModernComboBoxStyle}"
                                 Height="35"
                                 FontSize="10"/>
                    </StackPanel>
                </ScrollViewer>

                <!-- Botones de acción -->
                <Grid Grid.Row="2" Height="70">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="20,0">
                        <Button x:Name="btnCancelEvent" Content="Cancelar" Style="{StaticResource RoundedButtonStyle}" Margin="0,0,10,0" Click="CancelEventButton_Click" Width="100"/>
                        <Button x:Name="btnGuardarEvento" Content="Guardar" Style="{StaticResource RoundedButtonStyle}" Width="100" Click="GuardarEvento_Click"/>
                    </StackPanel>
                </Grid>
            </Grid>
        </Grid>

        <!-- Panel deslizable para nuevo contacto -->
        <Grid x:Name="SlidePanel" 
              Grid.Column="2"
              Grid.RowSpan="3" 
              Width="400" 
              HorizontalAlignment="Right" 
              Panel.ZIndex="999"
              Visibility="Collapsed"
              Style="{StaticResource SlidePanelStyle}">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="ContactPanelTransform" X="400"/>
            </Grid.RenderTransform>
            
            <Grid>
                <Grid.Effect>
                    <DropShadowEffect BlurRadius="20" ShadowDepth="0" Color="Black" Opacity="0.5"/>
                </Grid.Effect>
                
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!-- Header del panel -->
                <Grid Grid.Row="0" Height="60">
                    <TextBlock x:Name="txtPanelNuevoContactoTitulo" Text="Nuevo Contacto" 
                              Style="{StaticResource SlidePanelContentStyle}" 
                              FontSize="20" 
                              FontWeight="Bold" 
                              VerticalAlignment="Center" 
                              Margin="20,0"/>
                </Grid>

                <!-- Contenido del formulario -->
                <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                    <StackPanel Margin="20">
                        <TextBlock x:Name="txtLabelContactName" Text="Nombre" 
                                   Style="{StaticResource PrimaryTextStyle}" 
                                   FontWeight="SemiBold" 
                                   FontSize="15" 
                                   Margin="0,0,0,8"/>
                        <TextBox x:Name="ContactTitleTextBox" 
                                Style="{StaticResource ModernTextBoxStyle}"
                                Height="30" 
                                FontSize="10" 
                                Margin="0,0,0,20"/>

                        <TextBlock x:Name="txtLabelContactType" Text="Tipo de Contacto" 
                                   Style="{StaticResource PrimaryTextStyle}" 
                                   FontWeight="SemiBold" 
                                   FontSize="15" 
                                   Margin="0,0,0,8"/>
                        <ComboBox x:Name="cbEstadoContacto" 
                                 Margin="0,0,0,15" 
                                 Style="{StaticResource ModernComboBoxStyle}"
                                 Height="35"
                                 FontSize="10"/>

                        <TextBlock x:Name="txtLabelContactCase" Text="Caso asociado"
                                   Style="{StaticResource PrimaryTextStyle}"
                                   FontWeight="SemiBold"
                                   FontSize="15"
                                   Margin="0,0,0,8"/>
                        <ComboBox x:Name="cbCasoContacto"
                                 ItemsSource="{Binding CasosParaContacto}"
                                 DisplayMemberPath="titulo"
                                 SelectedValuePath="id"
                                 Margin="0,0,0,15"
                                 Style="{StaticResource ModernComboBoxStyle}"
                                 Height="35"
                                 FontSize="10"/>

                        <TextBlock x:Name="txtLabelContactPhone" Text="Teléfono" 
                                   Style="{StaticResource PrimaryTextStyle}" 
                                   FontWeight="SemiBold" 
                                   FontSize="15" 
                                   Margin="0,0,0,8"/>
                        <TextBox x:Name="ContactPhoneTextBox" 
                                Style="{StaticResource ModernTextBoxStyle}"
                                Height="30" 
                                FontSize="10" 
                                Margin="0,0,0,20"/>

                        <TextBlock x:Name="txtLabelContactEmail" Text="Email" 
                                   Style="{StaticResource PrimaryTextStyle}" 
                                   FontWeight="SemiBold" 
                                   FontSize="15" 
                                   Margin="0,0,0,8"/>
                        <TextBox x:Name="ContactEmailTextBox" 
                                Style="{StaticResource ModernTextBoxStyle}"
                                Height="30" 
                                FontSize="10" 
                                Margin="0,0,0,20"/>
                    </StackPanel>
                </ScrollViewer>

                <!-- Botones de acción -->
                <Grid Grid.Row="2" Height="70">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="20,0">
                        <Button x:Name="btnCancelContact" Content="Cancelar" Style="{StaticResource RoundedButtonStyle}" Margin="0,0,10,0" Click="CancelContactButton_Click" Width="100"/>
                        <Button x:Name="btnGuardarContacto" Content="Guardar" Style="{StaticResource RoundedButtonStyle}" Click="GuardarContacto_Click" Width="100"/>
                    </StackPanel>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>