<Window x:Class="TFG_V0._01.Ventanas.Clientes"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:TFG_V0._01.Controladores"
        xmlns:local="clr-namespace:TFG_V0._01.Ventanas"
        xmlns:conv="clr-namespace:TFG_V0._01.Converters"
        xmlns:System="clr-namespace:System.Windows.Media;assembly=PresentationFramework"
        xmlns:subventanas="clr-namespace:TFG_V0._01.Ventanas.SubVentanas"
        mc:Ignorable="d"
        Title="Clientes" Height="850" Width="1200"
        WindowStartupLocation="CenterScreen">

    <Window.Resources>
        
        <!-- Colores para modo oscuro -->
        <SolidColorBrush x:Key="BackgroundDark" Color="#1a1a1a"/>
        <SolidColorBrush x:Key="BackgroundSecondaryDark" Color="#2d2d2d"/>
        <SolidColorBrush x:Key="CardBackgroundDark" Color="#282828"/>
        <SolidColorBrush x:Key="ListItemBackgroundDark" Color="#3A3A3A"/>
        <SolidColorBrush x:Key="TextPrimaryDark" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="TextSecondaryDark" Color="#CCFFFFFF"/>
        <SolidColorBrush x:Key="BorderColorDark" Color="#40FFFFFF"/>
        
        <!-- Colores para modo claro -->
        <SolidColorBrush x:Key="BackgroundLight" Color="#f0f0f0"/>
        <SolidColorBrush x:Key="BackgroundSecondaryLight" Color="#f5f5f5"/>
        <SolidColorBrush x:Key="CardBackgroundLight" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="ListItemBackgroundLight" Color="#E8E8E8"/>
        <SolidColorBrush x:Key="TextPrimaryLight" Color="#222222"/>
        <SolidColorBrush x:Key="TextSecondaryLight" Color="#666666"/>
        <SolidColorBrush x:Key="BorderColorLight" Color="#40000000"/>

        <!-- Mesh Gradients -->
        <RadialGradientBrush x:Key="Mesh1" Center="0.3,0.3" RadiusX="0.5" RadiusY="0.5">
            <GradientStop Color="#de9cb8" Offset="0"/>
            <GradientStop Color="#9dcde1" Offset="1"/>
        </RadialGradientBrush>
        <RadialGradientBrush x:Key="Mesh2" Center="0.7,0.7" RadiusX="0.6" RadiusY="0.6">
            <GradientStop Color="#dc8eb8" Offset="0"/>
            <GradientStop Color="#98d3ec" Offset="1"/>
        </RadialGradientBrush>

        <!-- Estilo para el botón de cambio de tema -->
        <Style x:Key="ThemeButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="20">
                            <Image x:Name="ThemeIcon" Width="20" Height="20">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Setter Property="Source" Value="/TFG V0.01;component/Recursos/Iconos/luna.png"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="True">
                                                <Setter Property="Source" Value="/TFG V0.01;component/Recursos/Iconos/sol.png"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.8"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Botones redondeados -->
        <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#FFFFFF"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="20" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" TextElement.Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="aqua" TargetName="border"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="#DDDDDD" TargetName="border"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                                <Setter Property="Background" Value="#30000000" TargetName="border"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Estilo de botón redondeado que cambia con el tema -->
        <Style x:Key="ThemeAwareRoundedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#30FFFFFF"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryDark}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="20" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#40FFFFFF" TargetName="border"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#20FFFFFF" TargetName="border"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                                <Setter Property="Background" Value="#30000000" TargetName="border"/>
                                <Setter Property="Foreground" Value="{StaticResource TextPrimaryLight}"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Estilo de botón redondeado sin borde -->
        <Style x:Key="NoBorderRoundedButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ThemeAwareRoundedButtonStyle}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="20" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Transparent" TargetName="border"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="Transparent" TargetName="border"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                                <Setter Property="Background" Value="Transparent" TargetName="border"/>
                                <Setter Property="Foreground" Value="{StaticResource TextPrimaryLight}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="True">
                                <Setter Property="Background" Value="Transparent" TargetName="border"/>
                                <Setter Property="Foreground" Value="{StaticResource TextPrimaryDark}"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Easing para suavizar la animación -->
        <QuadraticEase x:Key="SmoothEase" EasingMode="EaseInOut" />
        
        <!-- Estilo ComboBox moderno -->
        <Style x:Key="ModernComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="#30FFFFFF"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryDark}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColorDark}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="35"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter Grid.Column="0" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="10,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
                                    <ToggleButton Grid.Column="1" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Focusable="False">
                                        <ToggleButton.Style>
                                            <Style TargetType="ToggleButton">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ToggleButton">
                                                            <Border Background="Transparent" Width="30">
                                                                <Path Data="M0,0 L4,4 L8,0" Stroke="{TemplateBinding Foreground}" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                </Grid>
                            </Border>
                            <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide" Panel.ZIndex="9999">
                                <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding Path=ActualWidth, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Border Background="{StaticResource CardBackgroundDark}" BorderBrush="{StaticResource BorderColorDark}" BorderThickness="1" CornerRadius="10" Margin="0,5,0,0" Effect="{StaticResource DropShadowEffect}">
                                        <ScrollViewer SnapsToDevicePixels="True" Margin="5">
                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                    <Setter Property="Background" Value="#30000000"/>
                    <Setter Property="Foreground" Value="{StaticResource TextPrimaryLight}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource BorderColorLight}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Estilo para el ToggleButton del ComboBox -->
        <Style x:Key="ComboBoxToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="Transparent" Width="30">
                            <Path Data="M0,0 L4,4 L8,0" Stroke="White" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Estilo de tarjeta -->
        <Style x:Key="CardStyle" TargetType="Border">
            <Setter Property="CornerRadius" Value="20"/>
            <Setter Property="Background" Value="{StaticResource CardBackgroundDark}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColorDark}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="15"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" BlurRadius="15" ShadowDepth="2" Opacity="0.3"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                    <Setter Property="Background" Value="{StaticResource CardBackgroundLight}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource BorderColorLight}"/>
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="#AAAAAA" BlurRadius="15" ShadowDepth="2" Opacity="0.3"/>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <DropShadowEffect x:Key="DropShadowEffect" Color="Black" BlurRadius="15" ShadowDepth="2" Opacity="0.3"/>

        <!-- Estilo para textos primarios -->
        <Style x:Key="PrimaryTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryDark}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource TextPrimaryLight}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Estilo para textos secundarios -->
        <Style x:Key="SecondaryTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource TextSecondaryDark}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource TextSecondaryLight}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Estilo para los contenedores de lista -->
        <Style x:Key="ListItemContainerStyle" TargetType="Border">
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
            <Setter Property="Background" Value="{StaticResource ListItemBackgroundDark}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColorDark}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                    <Setter Property="Background" Value="{StaticResource ListItemBackgroundLight}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource BorderColorLight}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <conv:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
        <conv:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>
        <conv:EstadoToColorConverter x:Key="EstadoToColorConverter"/>
        <conv:CountToVisibilityConverter x:Key="CountToVisibilityConverter"/>
        <conv:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <conv:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
        <conv:StringToBrushConverter x:Key="StringToBrushConverter"/>

        <Style x:Key="ModernDetailsButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#40FFFFFF"/>
            <Setter Property="Foreground" Value="#333"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="12,4"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="12" SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#80FFFFFF"/>
                                <Setter Property="Foreground" Value="#0078D7"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#20FFFFFF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Estilo para estirar los ítems del ListView -->
        <Style x:Key="StretchingListViewItemStyle" TargetType="ListViewItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        </Style>

        <Style x:Key="ComboBoxWithClearStyle" TargetType="ComboBox" BasedOn="{StaticResource ModernComboBoxStyle}">
            <Setter Property="Width" Value="400"/>
            <Setter Property="IsEditable" Value="True"/>
            <Setter Property="StaysOpenOnEdit" Value="True"/>
            <Setter Property="IsTextSearchEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="35"/>
                                        <ColumnDefinition Width="30"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox x:Name="PART_EditableTextBox" Grid.Column="0" Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" Foreground="White" BorderThickness="0" Padding="10,0,0,0" VerticalAlignment="Center"/>
                                    <!-- Botón X -->
                                    <Button x:Name="ClearButton" Grid.Column="1" Content="✖" Width="25" Height="25" Margin="5,0,0,0" Foreground="Red" Background="Transparent" BorderThickness="0" Visibility="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToVisibilityConverter}}" Click="ClearComboBox_Click"/>
                                    <!-- Flecha desplegable -->
                                    <ToggleButton Grid.Column="2" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Focusable="False">
                                        <ToggleButton.Style>
                                            <Style TargetType="ToggleButton" BasedOn="{StaticResource ComboBoxToggleButtonStyle}"/>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                </Grid>
                            </Border>
                            <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide" Panel.ZIndex="9999">
                                <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding Path=ActualWidth, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Border Background="#90454545" BorderBrush="#40FFFFFF" BorderThickness="1" CornerRadius="10" Margin="0,5,0,0" Effect="{StaticResource DropShadowEffect}">
                                        <ScrollViewer SnapsToDevicePixels="True" Margin="5">
                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Estilo para el TextBox -->
        <Style x:Key="RoundedTextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="#30FFFFFF"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryDark}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColorDark}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                            <ScrollViewer x:Name="PART_ContentHost" Margin="{TemplateBinding Padding}" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                    <Setter Property="Background" Value="#30000000"/>
                    <Setter Property="Foreground" Value="{StaticResource TextPrimaryLight}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource BorderColorLight}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Gradientes para el panel deslizante -->
        <LinearGradientBrush x:Key="SlidePanelGradientDark" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#070055" Offset="0"/>
            <GradientStop Color="#250055" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="SlidePanelGradientLight" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#ee6ef5" Offset="0"/>
            <GradientStop Color="#57b9ff" Offset="1"/>
        </LinearGradientBrush>

        <!-- Estilo para el panel deslizante -->
        <Style x:Key="SlidePanelStyle" TargetType="Grid">
            <Setter Property="Background" Value="{StaticResource SlidePanelGradientDark}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                    <Setter Property="Background" Value="{StaticResource SlidePanelGradientLight}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Estilo para el panel de edición -->
        <Style x:Key="EditPanelStyle" TargetType="Border">
            <Setter Property="Background" Value="#CC222222"/>
            <Setter Property="CornerRadius" Value="15"/>
            <Setter Property="Padding" Value="20"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="15" ShadowDepth="2" Color="Black" Opacity="0.3"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                    <Setter Property="Background" Value="#CCFFFFFF"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Estilo para los campos de edición -->
        <Style x:Key="EditFieldStyle" TargetType="StackPanel">
            <Setter Property="Margin" Value="0,0,0,10"/>
        </Style>

        <!-- Estilo para las etiquetas de edición -->
        <Style x:Key="EditLabelStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource TextSecondaryDark}"/>
            <Setter Property="Margin" Value="0,0,0,5"/>
            <Setter Property="FontSize" Value="14"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource TextSecondaryLight}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Estilo para los TextBox de edición -->
        <Style x:Key="EditTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource RoundedTextBoxStyle}">
            <Setter Property="Background" Value="#40FFFFFF"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryDark}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColorDark}"/>
            <Setter Property="Padding" Value="10,8"/>
            <Setter Property="FontSize" Value="14"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                    <Setter Property="Background" Value="#40000000"/>
                    <Setter Property="Foreground" Value="{StaticResource TextPrimaryLight}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource BorderColorLight}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Estilo para los botones de edición -->
        <Style x:Key="EditButtonStyle" TargetType="Button" BasedOn="{StaticResource ThemeAwareRoundedButtonStyle}">
            <Setter Property="Width" Value="100"/>
            <Setter Property="Margin" Value="0,10,10,0"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

    </Window.Resources>

    <Grid>
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="AUTO" />
            <ColumnDefinition Width="2" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        
        <!-- Fondo -->
        <Grid.Background>
            <DrawingBrush x:Name="meshGradientBrush" Stretch="Fill">
                <DrawingBrush.Drawing>
                    <DrawingGroup>
                        <GeometryDrawing>
                            <GeometryDrawing.Geometry>
                                <RectangleGeometry Rect="0,0,1,1"/>
                            </GeometryDrawing.Geometry>
                            <GeometryDrawing.Brush>
                                <StaticResource ResourceKey="Mesh1"/>
                            </GeometryDrawing.Brush>
                        </GeometryDrawing>
                        <GeometryDrawing>
                            <GeometryDrawing.Geometry>
                                <RectangleGeometry Rect="0,0,1,1"/>
                            </GeometryDrawing.Geometry>
                            <GeometryDrawing.Brush>
                                <StaticResource ResourceKey="Mesh2"/>
                            </GeometryDrawing.Brush>
                        </GeometryDrawing>
                    </DrawingGroup>
                </DrawingBrush.Drawing>
            </DrawingBrush>
        </Grid.Background>
        
        <!-- Navbar -->
        <controls:NavbarControl x:Name="navbar" Grid.Column="0">
            <controls:NavbarControl.Effect>
                <DropShadowEffect BlurRadius="20" ShadowDepth="0" Color="Black" Opacity="0.3"/>
            </controls:NavbarControl.Effect>
        </controls:NavbarControl>
        
        <!-- Claro/Oscuro -->
        <Button x:Name="ThemeButton" Width="35" Height="35" Margin="0" HorizontalAlignment="Right" VerticalAlignment="Bottom" Click="ThemeButton_Click" Style="{StaticResource ThemeButtonStyle}" Grid.Column="2"/>

        <!-- Contenido Principal -->
        <Grid Grid.Column="2" Margin="20">
            <Grid.Effect>
                <DropShadowEffect BlurRadius="20" ShadowDepth="0" Color="Black" Opacity="0.3"/>
            </Grid.Effect>

            <!-- Selector de Cliente -->
            <Grid x:Name="ClientSelectorGrid" Visibility="Visible">
                <Border Style="{StaticResource CardStyle}" MaxWidth="600" MaxHeight="600" VerticalAlignment="Center" Margin="0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- Contenedor superior: título + combo -->
                        <StackPanel Grid.Row="0" Margin="20">
                            <TextBlock Text="Seleccionar Cliente" FontSize="24" Style="{StaticResource PrimaryTextStyle}" HorizontalAlignment="Center" Margin="0,0,0,30"/>
                            <Grid x:Name="ComboBoxContainer" Height="40">
                                <ComboBox x:Name="ClientesComboBox" Width="400" Height="30" Margin="0" Loaded="ComboClientes_Loaded" KeyUp="ComboClientes_KeyUp" SelectionChanged="ComboClientes_SelectionChanged" ItemsSource="{Binding ListaClientes}" SelectedItem="{Binding SelectedCliente, Mode=TwoWay}"/>
                            </Grid>
                        </StackPanel>

                        <!-- Contenedor de botones -->
                        <StackPanel Grid.Row="1" Margin="20,10,20,20">
                            <Button Content="Continuar" Style="{StaticResource ThemeAwareRoundedButtonStyle}" HorizontalAlignment="Stretch" MaxWidth="400" Margin="0,0,0,10" Click="clientecheck"/>
                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>

            <!-- Datos del Cliente -->
            <Grid x:Name="ClientDetailsGrid" Visibility="Collapsed">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!-- Cabecera con botón volver -->
                <Grid Grid.Row="0" Margin="0,0,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Button Grid.Column="0" Style="{StaticResource ThemeAwareRoundedButtonStyle}" Margin="0,0,20,0" Height="45" Width="90" Click="btnVolver_Click">
                        <StackPanel Orientation="Horizontal">
                            <Image x:Name="volver" Source="/TFG V0.01;component/Recursos/Iconos/volver.png" Width="24" Height="24" VerticalAlignment="Center"/>
                            <TextBlock Text="Volver" Margin="10,0,0,0" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Button>

                    <TextBlock Grid.Column="1" x:Name="ClienteNombreHeader" Text="{Binding SelectedCliente.nombre_cliente}" Style="{StaticResource PrimaryTextStyle}" FontSize="24" FontWeight="Bold" VerticalAlignment="Center" TextWrapping="Wrap"/>
                </Grid>
                
                <!-- Contenido de los detalles -->
                <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Margin="0,20,0,0">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="5"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="5"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- Columna Izquierda -->
                        <!-- Información Personal -->
                        <Border Style="{StaticResource CardStyle}" Grid.Column="0" Grid.Row="0" Margin="0,0,0,10">
                            <Grid>
                                <!-- Vista normal (no edición) -->
                                <StackPanel x:Name="PersonalInfoPanel" Visibility="{Binding IsEditPersonalInfoVisible, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                                    <TextBlock Text="{Binding SelectedCliente.fecha_contrato, StringFormat='Fecha de contrato: {0:dd/MM/yyyy}'}" Style="{StaticResource PrimaryTextStyle}" FontWeight="Bold" FontSize="16" Margin="0,0,0,10"/>
                                    <TextBlock Text="{Binding SelectedCliente.nombre_cliente}" Style="{StaticResource PrimaryTextStyle}" FontSize="16" Margin="0,0,0,10"/>
                                    <TextBlock Text="DNI:" Style="{StaticResource SecondaryTextStyle}" Margin="0,0,0,2"/>
                                    <TextBlock Text="{Binding SelectedCliente.dni}" Style="{StaticResource PrimaryTextStyle}" Margin="0,0,0,8"/>
                                    <TextBlock Text="Teléfono 1:" Style="{StaticResource SecondaryTextStyle}" Margin="0,0,0,2"/>
                                    <TextBlock Text="{Binding SelectedCliente.telf1}" Style="{StaticResource PrimaryTextStyle}" Margin="0,0,0,8"/>
                                    <TextBlock Text="Teléfono 2:" Style="{StaticResource SecondaryTextStyle}" Margin="0,0,0,2"/>
                                    <TextBlock Text="{Binding SelectedCliente.telf2}" Style="{StaticResource PrimaryTextStyle}" Margin="0,0,0,8"/>
                                    <TextBlock Text="Email 1:" Style="{StaticResource SecondaryTextStyle}" Margin="0,0,0,2"/>
                                    <TextBlock Text="{Binding SelectedCliente.email1}" Style="{StaticResource PrimaryTextStyle}" Margin="0,0,0,8"/>
                                    <TextBlock Text="Email 2:" Style="{StaticResource SecondaryTextStyle}" Margin="0,0,0,2"/>
                                    <TextBlock Text="{Binding SelectedCliente.email2}" Style="{StaticResource PrimaryTextStyle}" Margin="0,0,0,8"/>
                                    <TextBlock Text="Dirección:" Style="{StaticResource SecondaryTextStyle}" Margin="0,0,0,2"/>
                                    <TextBlock Text="{Binding SelectedCliente.direccion}" Style="{StaticResource PrimaryTextStyle}" TextWrapping="Wrap" Margin="0,0,0,8"/>
                                    <Button Content="Editar Información" Style="{StaticResource ThemeAwareRoundedButtonStyle}" HorizontalAlignment="Right" Margin="0,10,0,0" Click="EditarInformacion_Click" Height="45" Width="150"/>
                                </StackPanel>

                                <!-- Panel de edición -->
                                <Border x:Name="EditPersonalInfoPanel" Style="{StaticResource EditPanelStyle}" Visibility="{Binding IsEditPersonalInfoVisible, Converter={StaticResource BoolToVisibilityConverter}}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                    <StackPanel>
                                        <TextBlock Text="{Binding EditFechaContrato, StringFormat='Fecha de contrato: {0:dd/MM/yyyy}'}" Style="{StaticResource PrimaryTextStyle}" FontWeight="Bold" FontSize="16" Margin="0,0,0,20"/>
                                        
                                        <StackPanel Style="{StaticResource EditFieldStyle}">
                                            <TextBlock Text="Nombre:" Style="{StaticResource EditLabelStyle}"/>
                                            <TextBox Text="{Binding EditNombre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource EditTextBoxStyle}"/>
                                        </StackPanel>

                                        <StackPanel Style="{StaticResource EditFieldStyle}">
                                            <TextBlock Text="Primer Apellido:" Style="{StaticResource EditLabelStyle}"/>
                                            <TextBox Text="{Binding EditApellido1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource EditTextBoxStyle}"/>
                                        </StackPanel>

                                        <StackPanel Style="{StaticResource EditFieldStyle}">
                                            <TextBlock Text="Segundo Apellido:" Style="{StaticResource EditLabelStyle}"/>
                                            <TextBox Text="{Binding EditApellido2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource EditTextBoxStyle}"/>
                                        </StackPanel>

                                        <StackPanel Style="{StaticResource EditFieldStyle}">
                                            <TextBlock Text="DNI:" Style="{StaticResource EditLabelStyle}"/>
                                            <TextBox Text="{Binding EditDNI, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource EditTextBoxStyle}"/>
                                        </StackPanel>

                                        <StackPanel Style="{StaticResource EditFieldStyle}">
                                            <TextBlock Text="Teléfono 1:" Style="{StaticResource EditLabelStyle}"/>
                                            <TextBox Text="{Binding EditTelefono1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource EditTextBoxStyle}"/>
                                        </StackPanel>

                                        <StackPanel Style="{StaticResource EditFieldStyle}">
                                            <TextBlock Text="Teléfono 2:" Style="{StaticResource EditLabelStyle}"/>
                                            <TextBox Text="{Binding EditTelefono2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource EditTextBoxStyle}"/>
                                        </StackPanel>

                                        <StackPanel Style="{StaticResource EditFieldStyle}">
                                            <TextBlock Text="Email 1:" Style="{StaticResource EditLabelStyle}"/>
                                            <TextBox Text="{Binding EditEmail1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource EditTextBoxStyle}"/>
                                        </StackPanel>

                                        <StackPanel Style="{StaticResource EditFieldStyle}">
                                            <TextBlock Text="Email 2:" Style="{StaticResource EditLabelStyle}"/>
                                            <TextBox Text="{Binding EditEmail2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource EditTextBoxStyle}"/>
                                        </StackPanel>

                                        <StackPanel Style="{StaticResource EditFieldStyle}">
                                            <TextBlock Text="Dirección:" Style="{StaticResource EditLabelStyle}"/>
                                            <TextBox Text="{Binding EditDireccion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource EditTextBoxStyle}" TextWrapping="Wrap"/>
                                        </StackPanel>

                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                            <Button Content="Guardar" Style="{StaticResource EditButtonStyle}" Click="GuardarInformacion_Click"/>
                                            <Button Content="Cancelar" Style="{StaticResource EditButtonStyle}" Margin="10,10,0,0" Click="CancelarInformacion_Click"/>
                                        </StackPanel>
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </Border>

                        <!-- Casos Activos -->
                        <Border Style="{StaticResource CardStyle}" Grid.Column="0" Grid.Row="2" Margin="0,0,0,10">
                            <StackPanel>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="Casos Activos" Style="{StaticResource PrimaryTextStyle}" FontSize="20" FontWeight="SemiBold" VerticalAlignment="Center"/>
                                    <Button Grid.Column="1" Content="Nuevo Caso" Style="{StaticResource ThemeAwareRoundedButtonStyle}" Height="45" Width="120" Padding="15,0" Click="btnNuevoCaso_Click"/>
                                </Grid>
                                <ScrollViewer VerticalScrollBarVisibility="Auto" MaxHeight="300" Margin="0,10,0,0">
                                    <ListView x:Name="CasosActivosList" Background="Transparent" BorderThickness="0" Margin="0,15,0,0" ItemsSource="{Binding CasosActivos}" ItemContainerStyle="{StaticResource StretchingListViewItemStyle}">
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <Border Style="{StaticResource ListItemContainerStyle}" HorizontalAlignment="Stretch">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <!-- Círculo de estado -->
                                                        <Ellipse Width="18" Height="18" Margin="0,0,12,0" Grid.Column="0">
                                                            <Ellipse.Fill>
                                                                <Binding Path="Estado.nombre" Converter="{StaticResource EstadoToColorConverter}"/>
                                                            </Ellipse.Fill>
                                                        </Ellipse>
                                                        <!-- Info del caso -->
                                                        <StackPanel Grid.Column="1" VerticalAlignment="Center">
                                                            <TextBlock Text="{Binding titulo}" Style="{StaticResource PrimaryTextStyle}" FontWeight="Bold" FontSize="16"/>
                                                            <TextBlock Text="{Binding Estado.nombre}" Style="{StaticResource SecondaryTextStyle}" FontSize="13" Margin="0,2,0,0"/>
                                                        </StackPanel>
                                                        <!-- Botón detalles -->
                                                        <Button Grid.Column="2" Content="Ver Detalles" Style="{StaticResource ThemeAwareRoundedButtonStyle}" Click="MostrarDetallesCaso_Click" CommandParameter="{Binding}" VerticalAlignment="Center" Margin="12,0,0,0" Height="45" Width="120"/>
                                                    </Grid>
                                                </Border>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                </ScrollViewer>
                            </StackPanel>
                        </Border>

                        <!-- Historial de Casos -->
                        <Border Style="{StaticResource CardStyle}" Grid.Column="0" Grid.Row="4" Margin="0,0,0,10">
                            <StackPanel>
                                <TextBlock Text="Historial de Casos" FontWeight="SemiBold" Style="{StaticResource PrimaryTextStyle}" FontSize="20" Margin="0,0,0,15"/>
                                <ListView x:Name="HistorialCasosList" Background="Transparent" BorderThickness="0" MaxHeight="300" ItemsSource="{Binding HistorialCasos}" ItemContainerStyle="{StaticResource StretchingListViewItemStyle}">
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <Border Style="{StaticResource ListItemContainerStyle}" HorizontalAlignment="Stretch">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <!-- Círculo de estado -->
                                                    <Ellipse Width="18" Height="18" Margin="0,0,12,0" Grid.Column="0">
                                                        <Ellipse.Fill>
                                                            <Binding Path="Estado.nombre" Converter="{StaticResource EstadoToColorConverter}"/>
                                                        </Ellipse.Fill>
                                                    </Ellipse>
                                                    <!-- Info del caso -->
                                                    <StackPanel Grid.Column="1" VerticalAlignment="Center">
                                                        <TextBlock Text="{Binding titulo}" Style="{StaticResource PrimaryTextStyle}" FontWeight="Bold" FontSize="16"/>
                                                        <TextBlock Text="{Binding Estado.nombre}" Style="{StaticResource SecondaryTextStyle}" FontSize="13" Margin="0,2,0,0"/>
                                                    </StackPanel>
                                                </Grid>
                                            </Border>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </StackPanel>
                        </Border>

                        <!-- Documentos del Cliente -->
                        <Border Style="{StaticResource CardStyle}" Grid.Column="2" Grid.Row="0" Grid.RowSpan="5" Margin="0,0,0,10">
                            <StackPanel>
                                <TextBlock Text="Documentos del Cliente" FontWeight="SemiBold" Style="{StaticResource PrimaryTextStyle}" FontSize="20" Margin="0,0,0,15"/>
                                <ScrollViewer VerticalScrollBarVisibility="Auto" MaxHeight="1150">
                                    <ListView x:Name="DocumentosClienteList" Background="Transparent" BorderThickness="0" ItemsSource="{Binding DocumentosCliente}" ItemContainerStyle="{StaticResource StretchingListViewItemStyle}">
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <Border Style="{StaticResource ListItemContainerStyle}" HorizontalAlignment="Stretch">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <StackPanel Grid.Column="0" VerticalAlignment="Center">
                                                            <TextBlock Text="{Binding nombre}" Style="{StaticResource PrimaryTextStyle}" FontWeight="Bold" FontSize="15"/>
                                                            <TextBlock Text="{Binding fecha_subid, StringFormat='Subido: {0:dd/MM/yyyy}'}" Style="{StaticResource SecondaryTextStyle}" FontSize="12"/>
                                                            <TextBlock Text="{Binding tipo_documento}" Style="{StaticResource SecondaryTextStyle}" FontSize="12"/>
                                                        </StackPanel>
                                                        <Button Grid.Column="1" Content="Ver" Style="{StaticResource ThemeAwareRoundedButtonStyle}" Height="45" Width="100" FontSize="12" Margin="8,0,0,0" Click="VerDocumento_Click"/>
                                                        <Button Grid.Column="2" Content="Descargar" Style="{StaticResource ThemeAwareRoundedButtonStyle}" Height="45" Width="100" FontSize="12" Margin="8,0,0,0" Click="DescargarDocumento_Click"/>
                                                    </Grid>
                                                </Border>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                </ScrollViewer>
                            </StackPanel>
                        </Border>
                    </Grid>
                </ScrollViewer>
            </Grid>

            <!-- Overlay para cerrar al hacer clic fuera -->
            <Grid x:Name="OverlayPanel" 
                  Grid.RowSpan="3" 
                  Background="#80000000" 
                  Panel.ZIndex="999"
                  Visibility="Collapsed"
                  MouseDown="OverlayPanel_MouseDown"/>

            <!-- Panel deslizante para detalles del caso -->
            <Grid x:Name="SlidePanelDetalles" 
                  Grid.RowSpan="3" 
                  Width="400" 
                  HorizontalAlignment="Right" 
                  Panel.ZIndex="1000"
                  Visibility="Collapsed">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Background" Value="{StaticResource SlidePanelGradientDark}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                                <Setter Property="Background" Value="{StaticResource SlidePanelGradientLight}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.RenderTransform>
                    <TranslateTransform x:Name="SlidePanelDetallesTransform" X="400"/>
                </Grid.RenderTransform>
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <StackPanel Margin="20">
                        <TextBlock x:Name="PopupTitulo" FontSize="20" FontWeight="Bold" Style="{StaticResource PrimaryTextStyle}"/>
                        <TextBlock x:Name="PopupDescripcion" FontSize="14" Style="{StaticResource SecondaryTextStyle}" Margin="0,10,0,0" TextWrapping="Wrap"/>
                        <TextBlock x:Name="PopupCliente" FontSize="14" Style="{StaticResource SecondaryTextStyle}" Margin="0,10,0,0"/>
                        <TextBlock x:Name="PopupTipo" FontSize="14" Style="{StaticResource SecondaryTextStyle}" Margin="0,5,0,0"/>
                        <TextBlock x:Name="PopupEstado" FontSize="14" Style="{StaticResource SecondaryTextStyle}" Margin="0,5,0,0"/>
                        <TextBlock x:Name="PopupFecha" FontSize="14" Style="{StaticResource SecondaryTextStyle}" Margin="0,5,0,0"/>

                        <!-- Documentos Relacionados -->
                        <TextBlock Text="Documentos" FontSize="16" FontWeight="SemiBold" Style="{StaticResource PrimaryTextStyle}" Margin="0,20,0,5"/>
                        <ItemsControl x:Name="PopupDocumentos" Margin="0,5,0,0">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding nombre}" Style="{StaticResource SecondaryTextStyle}" Margin="0,2"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </ScrollViewer>
            </Grid>

            <!-- Panel deslizante para añadir caso -->
            <Grid x:Name="SlidePanelCaso" 
                  Grid.RowSpan="3" 
                  Width="400" 
                  HorizontalAlignment="Right" 
                  Panel.ZIndex="1000"
                  Visibility="Collapsed">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Background" Value="{StaticResource SlidePanelGradientDark}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                                <Setter Property="Background" Value="{StaticResource SlidePanelGradientLight}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.RenderTransform>
                    <TranslateTransform x:Name="SlidePanelCasoTransform" X="400"/>
                </Grid.RenderTransform>
                <ContentControl>
                    <subventanas:AñadirCasoWindow x:Name="AddCasoControl"/>
                </ContentControl>
            </Grid>

        </Grid>
    </Grid>
</Window>
