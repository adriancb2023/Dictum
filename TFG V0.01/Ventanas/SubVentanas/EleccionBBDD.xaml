<Window x:Class="TFG_V0._01.Ventanas.SubVentanas.EleccionBBDD"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TFG_V0._01.Ventanas.SubVentanas"
        mc:Ignorable="d"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        WindowStartupLocation="CenterScreen"
        Title="EleccionBBDD" Height="450" Width="600">

    <Window.Resources>
        <!-- Estilo para Toggle Switch -->
        <Style x:Key="ToggleSwitchStyle" TargetType="CheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <Border Width="40" Height="20" Background="#40FFFFFF" CornerRadius="10">
                                <Border x:Name="Switch" Width="18" Height="18" Background="White" CornerRadius="9"
                                HorizontalAlignment="Left" Margin="1,0,0,0"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Switch" Property="HorizontalAlignment" Value="Right"/>
                                <Setter TargetName="Switch" Property="Margin" Value="0,0,1,0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Estilo para botones principales -->
        <Style x:Key="ModernButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundDark}"/>
            <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundDark}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="8" ShadowDepth="2" Color="#22000000"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                                CornerRadius="8" BorderThickness="{TemplateBinding BorderThickness}" 
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="{DynamicResource ButtonHoverDark}" TargetName="border"/>
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect BlurRadius="12" ShadowDepth="4" Color="#44000000"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="#FFAAAAAA" TargetName="border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Colores y estilos para el botón de cerrar -->
        <SolidColorBrush x:Key="CloseButtonForegroundDark" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="CloseButtonForegroundLight" Color="#FF222222"/>
        <SolidColorBrush x:Key="CloseButtonHover" Color="#FFFF5252"/>

        <!--Colores para los botones-->
        <SolidColorBrush x:Key="ButtonBackgroundDark" Color="#333333"/>
        <SolidColorBrush x:Key="ButtonBackgroundLight" Color="#EEEEEE"/>
        <SolidColorBrush x:Key="ButtonForegroundDark" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="ButtonForegroundLight" Color="#000000"/>
        <SolidColorBrush x:Key="ButtonHoverDark" Color="#555555"/>
        <SolidColorBrush x:Key="ButtonHoverLight" Color="#DDDDDD"/>
        <SolidColorBrush x:Key="ButtonShadow" Color="#22000000"/>

        <!-- Colores para texto informativo -->
        <SolidColorBrush x:Key="InfoTextForegroundDark" Color="#CCFFFFFF"/>
        <SolidColorBrush x:Key="InfoTextForegroundLight" Color="#333333"/>

        <!-- Colores para texto "Test" y "Nube" -->
        <SolidColorBrush x:Key="BBDDTextForegroundDark" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="BBDDTextForegroundLight" Color="#000000"/>

        <!-- Estilo para el botón de cambio de tema -->
        <Style x:Key="ThemeButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="20">
                            <Image x:Name="ThemeIcon" Width="20" Height="20">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Setter Property="Source" Value="/TFG V0.01;component/Recursos/Iconos/luna.png"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="True">
                                                <Setter Property="Source" Value="/TFG V0.01;component/Recursos/Iconos/sol.png"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.8"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Mesh Gradients accesibles globalmente -->
        <RadialGradientBrush x:Key="Mesh1" Center="0.3,0.3" RadiusX="0.5" RadiusY="0.5">
            <GradientStop Color="#de9cb8" Offset="0"/>
            <GradientStop Color="#9dcde1" Offset="1"/>
        </RadialGradientBrush>
        <RadialGradientBrush x:Key="Mesh2" Center="0.7,0.7" RadiusX="0.6" RadiusY="0.6">
            <GradientStop Color="#dc8eb8" Offset="0"/>
            <GradientStop Color="#98d3ec" Offset="1"/>
        </RadialGradientBrush>
    </Window.Resources>
    
    <Border  Background="#FF1A1A2E" MouseDown="Border_MouseDown">
        <Grid x:Name="MainGrid">
            <!-- Overlay para oscurecer el fondo -->
            <Border x:Name="OverlayDark" Background="#80000000" CornerRadius="0" Visibility="Collapsed"/>

            <!-- Botón de cerrar -->
            <Button x:Name="CloseButton" Content="✖" FontSize="20" Width="30" Height="30" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,15,15,0" Background="Transparent" BorderThickness="0" Cursor="Hand"
                    Foreground="{DynamicResource CloseButtonForegroundDark}" Click="CloseButton_Click" >
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Setter Property="Foreground" Value="{DynamicResource CloseButtonForegroundDark}"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource CloseButtonHover}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <!-- Claro/Oscuro -->
            <Button x:Name="ThemeButton" Width="40" Height="40" Margin="15,15,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Click="ThemeButton_Click" 
                    Style="{StaticResource ThemeButtonStyle}"/>

            <!-- Contenedor principal -->
            <Border x:Name="FormBorder" Width="500" Height="300" CornerRadius="15" Background="#40FFFFFF" VerticalAlignment="Center">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="15" Direction="-90" RenderingBias="Quality" ShadowDepth="2" Color="#20000000"/>
                </Border.Effect>

                <StackPanel Margin="30">
                    <TextBlock x:Name="txtSeleccionBBDD" Text="Selecciona el tipo de Base de Datos" FontSize="22" FontWeight="Bold" Foreground="White" 
                              Margin="0,20,0,10" HorizontalAlignment="Center"/>

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,15">
                        <TextBlock x:Name="txtInfoSeleccion" Text="La base de datos seleccionada anteriormente está marcada con un icono " FontSize="12" Foreground="{DynamicResource InfoTextForegroundLight}" VerticalAlignment="Center"/>
                        <Ellipse Width="7" Height="7" Fill="#EA33F7" StrokeThickness="1" VerticalAlignment="Center" Margin="0,3,0,0"/>
                    </StackPanel>

                    <!-- Campos de edición -->
                    <Grid Margin="0,30,0,30" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <Image x:Name="local" Source="/TFG V0.01;component/Recursos/Iconos/local.png" Width="20" Height="20"/>
                            <TextBlock x:Name="txtLocal" Text="Test " Foreground="{DynamicResource BBDDTextForegroundLight}" VerticalAlignment="Center" Margin="5,0,10,0"/>
                            <CheckBox x:Name="BBDD" Style="{StaticResource ToggleSwitchStyle}" Margin="0,0,10,0" VerticalAlignment="Center" />
                            <TextBlock x:Name="txtNube" Text="Nube" Foreground="{DynamicResource BBDDTextForegroundLight}" VerticalAlignment="Center" Margin="10,0,5,0"/>
                            <Image x:Name="supa" Source="/TFG V0.01;component/Recursos/Iconos/cloud.png" Width="20" Height="20"/>
                        </StackPanel>
                    </Grid>

                    <!-- Botones -->
                    <Button x:Name="btnAceptar" Content="Aceptar" Style="{StaticResource ModernButton}" Width="120" Margin="0,18,0,0" Click="iniciarModoAmind"/>
                </StackPanel>
            </Border>
        </Grid>
    </Border>
</Window>
