<Window x:Class="TFG_V0._01.Ventanas.SubVentanas.NuevoContactoWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TFG_V0._01.Ventanas.SubVentanas"
        mc:Ignorable="d"
        Title="Nuevo Contacto" Height="500" Width="600"
        WindowStartupLocation="CenterScreen"
        Background="#FF2D2D2D">
    
    <Window.Resources>
        <!-- Estilo para TextBox redondeado -->
        <Style x:Key="RoundedTextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="#30FFFFFF"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#80FFFFFF"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="15">
                            <ScrollViewer x:Name="PART_ContentHost" 
                                        Margin="{TemplateBinding Padding}"
                                        VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                    <Setter Property="Foreground" Value="#222222"/>
                    <Setter Property="Background" Value="#30FFFFFF"/>
                    <Setter Property="BorderBrush" Value="#40000000"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Estilo para ComboBox redondeado -->
        <Style x:Key="RoundedComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Background" Value="#454545"/>
            <Setter Property="Foreground" Value="{DynamicResource TextPrimaryDark}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="10,8"/>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Padding" Value="10,5"/>
                        <Setter Property="Foreground" Value="#FFFFFF"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource TextPrimaryLight}"/>
                                <Setter Property="Background" Value="Transparent"/>
                            </DataTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource ButtonHoverLight}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{DynamicResource ButtonHoverDark}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False"/>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="#EEE"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False"/>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="#CCC"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border x:Name="ComboBoxBorder"
                                    Background="{TemplateBinding Background}" 
                                    CornerRadius="10" 
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter Grid.Column="0" 
                                                    Content="{TemplateBinding SelectionBoxItem}"
                                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                    VerticalAlignment="Center"
                                                    Margin="{TemplateBinding Padding}"
                                                    HorizontalAlignment="Left"/>
                                    <ToggleButton Grid.Column="0" Grid.ColumnSpan="2"
                                                x:Name="ToggleButton"
                                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                ClickMode="Press">
                                        <ToggleButton.Template>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Border Background="Transparent" 
                                                        BorderThickness="0"
                                                        Padding="5">
                                                    <Path Data="M0,0 L4,4 L8,0"
                                                          Stroke="{DynamicResource TextPrimaryDark}"
                                                          StrokeThickness="2"
                                                          HorizontalAlignment="Center"
                                                          VerticalAlignment="Center">
                                                        <Path.Style>
                                                            <Style TargetType="Path">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                                                                        <Setter Property="Stroke" Value="{DynamicResource TextPrimaryLight}"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Path.Style>
                                                    </Path>
                                                </Border>
                                            </ControlTemplate>
                                        </ToggleButton.Template>
                                    </ToggleButton>
                                </Grid>
                            </Border>
                            <Popup x:Name="PART_Popup" 
                                   AllowsTransparency="True" 
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   PlacementTarget="{Binding ElementName=ComboBoxBorder}"
                                   Placement="Bottom"
                                   HorizontalOffset="0"
                                   VerticalOffset="2">
                                <Border CornerRadius="10"
                                        BorderThickness="1">
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter Property="Background" Value="#3A3A3A"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonHoverLight}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                                                    <Setter Property="Background" Value="#FFFFFF"/>
                                                    <Setter Property="BorderBrush" Value="#DDD"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <ScrollViewer MaxHeight="200">
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                    <Border.Width>
                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}" Path="ActualWidth"/>
                                    </Border.Width>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                    <Setter Property="Background" Value="#FFFFFF"/>
                    <Setter Property="Foreground" Value="{DynamicResource TextPrimaryLight}"/>
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="#CCCCCC" BlurRadius="5" ShadowDepth="2" Opacity="0.5"/>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Estilo para botones -->
        <Style x:Key="RoundedButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#30FFFFFF"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="20,10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="20">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag}" Value="False">
                    <Setter Property="Foreground" Value="#222222"/>
                </DataTrigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#40FFFFFF"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Título -->
        <TextBlock Text="Nuevo Contacto" FontSize="24" FontWeight="Bold" Foreground="White" Margin="0,0,0,20"/>

        <!-- Formulario -->
        <StackPanel Grid.Row="1" Margin="0,0,0,20">
            <!-- Caso -->
            <TextBlock Text="Caso" Foreground="White" Margin="0,0,0,5" FontSize="12"/>
            <ComboBox x:Name="CasoComboBox" Style="{StaticResource RoundedComboBoxStyle}" Margin="0,0,0,15"
                      DisplayMemberPath="titulo"/>

            <!-- Nombre -->
            <TextBlock Text="Nombre" Foreground="White" Margin="0,0,0,5" FontSize="12"/>
            <TextBox x:Name="NombreTextBox" Style="{StaticResource RoundedTextBoxStyle}" Margin="0,0,0,15"/>

            <!-- Rol -->
            <TextBlock Text="Rol" Foreground="White" Margin="0,0,0,5" FontSize="12"/>
            <ComboBox x:Name="RolComboBox" Style="{StaticResource RoundedComboBoxStyle}" Margin="0,0,0,15"/>

            <!-- Teléfono -->
            <TextBlock Text="Teléfono" Foreground="White" Margin="0,0,0,5" FontSize="12"/>
            <TextBox x:Name="TelefonoTextBox" Style="{StaticResource RoundedTextBoxStyle}" Margin="0,0,0,15"/>

            <!-- Email -->
            <TextBlock Text="Email" Foreground="White" Margin="0,0,0,5" FontSize="12"/>
            <TextBox x:Name="EmailTextBox" Style="{StaticResource RoundedTextBoxStyle}" Margin="0,0,0,15"/>
        </StackPanel>

        <!-- Botones -->
        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="Cancelar" Style="{StaticResource RoundedButtonStyle}" Margin="0,0,10,0" Click="CancelarButton_Click"/>
            <Button Content="Guardar" Style="{StaticResource RoundedButtonStyle}" Click="GuardarButton_Click"/>
        </StackPanel>
    </Grid>
</Window> 